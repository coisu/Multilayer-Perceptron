SHELL := /bin/bash

PY ?= python3

SRC_DIR      ?= srcs
SPLIT        := $(SRC_DIR)/split.py
TRAIN_PY     := $(SRC_DIR)/train.py
PREDICT_PY   := $(SRC_DIR)/predict.py
MLP_LIB      := $(SRC_DIR)/mlp_numpy.py

export PYTHONPATH := $(SRC_DIR):$(PYTHONPATH)

DATASET_DIR   ?= datasets
MODEL_DIR     ?= models
OUTPUT_DIR    ?= outputs
DIRS          := $(DATASET_DIR) $(MODEL_DIR) $(OUTPUT_DIR)

DATA          ?= $(DATASET_DIR)/data.csv
TRAIN_SPLIT   ?= $(DATASET_DIR)/data_train.csv
VALID_SPLIT   ?= $(DATASET_DIR)/data_valid.csv

MODEL         ?= $(MODEL_DIR)/saved_model.npz
PRED_CSV      ?= $(MODEL_DIR)/predictions.csv
LOSS_PNG      ?= $(OUTPUT_DIR)/loss.png
ACC_PNG       ?= $(OUTPUT_DIR)/accuracy.png

# ---- Split options ----
SEED          ?= 42
VALID_RATIO   ?= 0.2

# ---- Train options ----
LAYERS        ?= 24 24
EPOCHS        ?= 40
LR            ?= 0.05
BATCH         ?= 32
ACT           ?= relu

all: deps split train predict

help:
	@echo "Usage:"
	@echo "  make                        # split -> train -> predict"
	@echo "  make split                  # data.csv -> data_train.csv, data_valid.csv"
	@echo "  make train                  # train model, save npz + learning curves"
	@echo "  make predict                # evaluate on valid set, save predictions.csv"
	@echo "  make clean                  # remove artifacts"
	@echo ""
	@echo "Override defaults, e.g.:"
	@echo "  make EPOCHS=80 LR=0.03 LAYERS='32 16' ACT=sigmoid"
	@echo "  make VALID_RATIO=0.25 SEED=123"
	@echo ""
	@echo "Files:"
	@echo "  $(DATA) -> $(TRAIN_SPLIT), $(VALID_SPLIT) -> $(MODEL), $(LOSS_PNG), $(ACC_PNG), $(PRED_CSV)"

deps:
	$(PY) -m pip install -U pip
	$(PY) -m pip install -r requirements.txt

dirs:
	@mkdir -p $(DIRS)

split: dirs $(TRAIN_SPLIT) $(VALID_SPLIT)

$(TRAIN_SPLIT) $(VALID_SPLIT): $(SPLIT) $(DATA)
	$(PY) $(SPLIT) --input $(DATA) \
		--train_out $(TRAIN_SPLIT) \
		--valid_out $(VALID_SPLIT) \
		--valid_ratio $(VALID_RATIO) \
		--seed $(SEED)

train: dirs $(MODEL)

$(MODEL): $(TRAIN_PY) $(MLP_LIB) $(TRAIN_SPLIT) $(VALID_SPLIT)
	$(PY) $(TRAIN_PY) \
		--train_set $(TRAIN_SPLIT) \
		--valid_set $(VALID_SPLIT) \
		--layers $(LAYERS) \
		--epochs $(EPOCHS) \
		--learning_rate $(LR) \
		--batch_size $(BATCH) \
		--activation $(ACT) \
		--out $(MODEL)
	# Move plots into OUTPUT_DIR (generated by train.py in CWD)
	@[ -f loss.png ] && mv -f loss.png $(LOSS_PNG) || true
	@[ -f accuracy.png ] && mv -f accuracy.png $(ACC_PNG) || true
	@echo "Saved: $(MODEL)"
	@echo "Plots: $(LOSS_PNG), $(ACC_PNG)"

predict: dirs $(PRED_CSV)

$(PRED_CSV): $(PREDICT_PY) $(MODEL) $(VALID_SPLIT)
	@echo "Evaluating $(MODEL) on $(VALID_SPLIT)..."
	@$(PY) $(PREDICT_PY) --model $(MODEL) --dataset $(VALID_SPLIT)
	@[ -f predictions.csv ] && mv -f predictions.csv $(PRED_CSV) || true
	@echo "Predictions saved to $(PRED_CSV)"

clean:
	@rm -f $(TRAIN_SPLIT) $(VALID_SPLIT) $(MODEL) $(PRED_CSV) $(LOSS_PNG) $(ACC_PNG)

re: clean all

.PHONY: all help dirs split train predict clean re
